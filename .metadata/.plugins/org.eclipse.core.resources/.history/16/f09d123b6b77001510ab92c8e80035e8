import java.util.ArrayList;
import java.util.HashMap;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

public class PostFile
{
	public static ArrayList<String> questions = new ArrayList<String>();
	public static ArrayList<String> answers = new ArrayList<String>();
    

    	public static void  getOwnerUserIds(Document document) {

    		NodeList nodelist = document.getElementsByTagName("row");
    		for (int i = 0; i < nodelist.getLength(); i++) {
    			Node nNode = nodelist.item(i);
    			if (nNode.getNodeType() == Node.ELEMENT_NODE) {
    				Element eElement = (Element) nNode;
    				if (eElement.getAttribute("PostTypeId").equals("1") && (eElement.hasAttribute("OwnerUserId"))) {
    					numberOfQuestions.add(eElement.getAttribute("OwnerUserId"));

    				} else if (eElement.getAttribute("PostTypeId").equals("2") && (eElement.hasAttribute("OwnerUserId"))) {
    					numberOfAnswers.add(eElement.getAttribute("OwnerUserId"));
    				}
    			}
    		}
    		// System.out.println("Total number of Questions : " +
    		// numberOfQuestions.size());
    		// System.out.println("Total number of Answers : " +
    		// numberOfAnswers.size());
    	}

    
    
    	/*String PostTypeId ;
        String OwnerUserId = null;
    	HashMap <String ,Integer> questions=new HashMap<String ,Integer>();
        HashMap <String ,Integer> answers=new HashMap<String ,Integer>();
    	NodeList nList = document.getElementsByTagName("row");
    	for (int temp = 0; temp < nList.getLength(); temp++) {

    		Node nNode = nList.item(temp);
    				
           if (nNode.getNodeType() == Node.ELEMENT_NODE) {

    			Element element = (Element) nNode;
    			
                OwnerUserId=element.getAttribute("OwnerUserId");
                PostTypeId=element.getAttribute("PostTypeId");
                
    			
    			if(PostTypeId=="1")
    		    {
    				
    		    	if(questions.containsKey(OwnerUserId))
    		    	{
    		    		int val=questions.get(OwnerUserId)+1;
    		    		questions.put(OwnerUserId, val);
    		    	}
    		    	else
    		    		questions.put(OwnerUserId, 1);
    		    }else
    		    	if(answers.containsKey(OwnerUserId))
    		    	{
    		    		int val=answers.get(OwnerUserId)+1;
    		    		questions.put(OwnerUserId, val);
    		    	}
    		    	else
    		    		answers.put(OwnerUserId, 1);
    		}
    	
    }
    System.out.println(questions.size()+" "+answers.size());*/
}
    
}
	
	